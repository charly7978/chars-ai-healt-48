# Script para limpiar completamente el repositorio Git
# SOLUCI√ìN DEFINITIVA PARA PROBLEMAS DE MERGE Y COMMIT

Write-Host "üßπ LIMPIEZA COMPLETA DEL REPOSITORIO GIT" -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Cyan

# Verificar si estamos en el directorio correcto
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå ERROR: No se encontr√≥ el directorio .git" -ForegroundColor Red
    Write-Host "Ejecuta este script desde la ra√≠z del repositorio" -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ Directorio actual: $(Get-Location)" -ForegroundColor Yellow
Write-Host "üîç Verificando estado del repositorio..." -ForegroundColor Yellow

# Mostrar estado actual
Write-Host "`nüìä ESTADO ACTUAL:" -ForegroundColor Green
git status --porcelain

Write-Host "`nüîó REMOTES CONFIGURADOS:" -ForegroundColor Green
git remote -v

Write-Host "`nüåø RAMAS DISPONIBLES:" -ForegroundColor Green
git branch -a

Write-Host "`n‚ö†Ô∏è  ADVERTENCIA: Este script realizar√° las siguientes acciones:" -ForegroundColor Red
Write-Host "   1. Limpiar el working directory" -ForegroundColor Red
Write-Host "   2. Resetear HEAD al √∫ltimo commit" -ForegroundColor Red
Write-Host "   3. Eliminar archivos no rastreados" -ForegroundColor Red
Write-Host "   4. Limpiar stash" -ForegroundColor Red
Write-Host "   5. Reconfigurar remotes si es necesario" -ForegroundColor Red

$confirmation = Read-Host "`n¬øContinuar? (s/N)"
if ($confirmation -ne "s" -and $confirmation -ne "S") {
    Write-Host "‚ùå Operaci√≥n cancelada" -ForegroundColor Yellow
    exit 0
}

Write-Host "`nüöÄ INICIANDO LIMPIEZA COMPLETA..." -ForegroundColor Green

# 1. Limpiar working directory
Write-Host "`n1Ô∏è‚É£ Limpiando working directory..." -ForegroundColor Cyan
git reset --hard HEAD
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Working directory limpiado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error al limpiar working directory" -ForegroundColor Red
}

# 2. Limpiar archivos no rastreados
Write-Host "`n2Ô∏è‚É£ Eliminando archivos no rastreados..." -ForegroundColor Cyan
git clean -fd
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Archivos no rastreados eliminados" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error al eliminar archivos no rastreados" -ForegroundColor Red
}

# 3. Limpiar stash
Write-Host "`n3Ô∏è‚É£ Limpiando stash..." -ForegroundColor Cyan
git stash clear
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Stash limpiado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error al limpiar stash" -ForegroundColor Red
}

# 4. Verificar y configurar remotes
Write-Host "`n4Ô∏è‚É£ Verificando configuraci√≥n de remotes..." -ForegroundColor Cyan
$remotes = git remote -v
if ([string]::IsNullOrEmpty($remotes)) {
    Write-Host "‚ö†Ô∏è  No hay remotes configurados. Configurando origin..." -ForegroundColor Yellow
    
    # Intentar detectar la URL del repositorio
    $repoUrl = "https://github.com/charly7978/chars-ai-healt-48.git"
    Write-Host "üîó Agregando remote origin: $repoUrl" -ForegroundColor Yellow
    
    git remote add origin $repoUrl
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Remote origin configurado" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Error al configurar remote origin" -ForegroundColor Red
    }
} else {
    Write-Host "‚úÖ Remotes ya configurados" -ForegroundColor Green
}

# 5. Verificar estado final
Write-Host "`n5Ô∏è‚É£ Verificando estado final..." -ForegroundColor Cyan
Write-Host "`nüìä ESTADO FINAL:" -ForegroundColor Green
git status

Write-Host "`nüîó REMOTES FINALES:" -ForegroundColor Green
git remote -v

Write-Host "`nüåø RAMA ACTUAL:" -ForegroundColor Green
git branch --show-current

Write-Host "`n‚úÖ LIMPIEZA COMPLETA FINALIZADA" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green
Write-Host "El repositorio est√° ahora en un estado limpio y estable" -ForegroundColor Green
Write-Host "`nüí° PR√ìXIMOS PASOS RECOMENDADOS:" -ForegroundColor Cyan
Write-Host "   1. Verificar que no hay conflictos: git status" -ForegroundColor White
Write-Host "   2. Hacer pull de los cambios remotos: git pull origin main" -ForegroundColor White
Write-Host "   3. Crear un nuevo commit limpio" -ForegroundColor White
Write-Host "   4. Configurar pre-commit hooks para prevenir problemas futuros" -ForegroundColor White
